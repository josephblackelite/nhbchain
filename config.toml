ListenAddress = ":6001"
RPCAddress = ":8080"
DataDir = "./nhb-data"
# Provide the absolute or relative path to the vetted genesis file for this network.
GenesisFile = "./config/genesis.json"
# DEV ONLY: override to true exclusively for ephemeral local testing.
AllowAutogenesis = false
ValidatorKeystorePath = ""
ValidatorKMSURI = ""
ValidatorKMSEnv = ""
NetworkName = "nhb-local"

[mempool]
MaxTransactions = 5000
[p2p]
NetworkId = 187001
MaxPeers = 64
MaxInbound = 60
MaxOutbound = 30
MinPeers = 12
OutboundPeers = 16
Bootnodes = []
PersistentPeers = []
Seeds = ["nhb1seed...@seed1.nhb:38766","nhb1seed...@seed2.nhb:38766"]
BanScore = 100
GreyScore = 50
RateMsgsPerSec = 50
Burst = 200
HandshakeTimeoutMs = 3000
PingIntervalSeconds = 30
PingTimeoutSeconds = 90
BanDurationSeconds = 3600
DialBackoffSeconds = 30
PEX = true

[network_security]
# Shared-secret token distributed out-of-band. Configure one of the following
# sources so consensusd and p2pd can authenticate each other. The daemon will
# refuse to start if none resolve to a non-empty value.
SharedSecretEnv = "NHB_NETWORK_SHARED_SECRET"
SharedSecretFile = "/etc/nhb/network.token"
SharedSecret = ""
# Production deployments must disable plaintext by leaving AllowInsecure=false
# and provisioning TLS certificates. Local lab setups can flip this to true
# temporarily when TLS is not available.
AllowInsecure = false
AuthorizationHeader = "x-nhb-network-token"
AllowUnauthenticatedReads = false
ServerTLSCertFile = "/etc/nhb/tls/p2pd.crt"
ServerTLSKeyFile = "/etc/nhb/tls/p2pd.key"
ClientTLSCertFile = "/etc/nhb/tls/consensus.crt"
ClientTLSKeyFile = "/etc/nhb/tls/consensus.key"
ClientCAFile = "/etc/nhb/tls/consensus-ca.pem"
ServerCAFile = "/etc/nhb/tls/p2pd-ca.pem"
AllowedClientCommonNames = ["consensusd"]
ServerName = "p2pd.internal"

PeerBanSeconds = 3600
ReadTimeout = 90
WriteTimeout = 5
MaxMsgBytes = 1048576
ClientVersion = "nhbchain/node"

[potso.rewards]
EpochLengthBlocks = 120
AlphaStakeBps = 7000
MinPayoutWei = "1000000000000000"
EmissionPerEpoch = "0"
TreasuryAddress = "nhb1exampletreasury000000000000000000000"
MaxWinnersPerEpoch = 5000
CarryRemainder = true
PayoutMode = "auto"

[potso.weights]
AlphaStakeBps = 7000
TxWeightBps = 6000
EscrowWeightBps = 3000
UptimeWeightBps = 1000
MaxEngagementPerEpoch = 1000
MinStakeToWinWei = "0"
MinEngagementToWin = 0
DecayHalfLifeEpochs = 7
TopKWinners = 5000
TieBreak = "addrHash"

[potso.abuse]
MinStakeToEarnWei = "0"
QuadraticTxDampenAfter = 0
QuadraticTxDampenPower = 2
MaxUserShareBps = 0

[governance]
MinDepositWei = "1000e18"
VotingPeriodSeconds = 604800
TimelockSeconds = 172800
QuorumBps = 2000
PassThresholdBps = 5000
AllowedParams = ["potso.weights.AlphaStakeBps","potso.rewards.EmissionPerEpochWei","potso.abuse.MaxUserShareBps","potso.abuse.MinStakeToEarnWei","potso.abuse.QuadraticTxDampenAfter","potso.abuse.QuadraticTxDampenPower","fees.baseFee"]
BlockTimestampToleranceSeconds = 5

[swap]
AllowedFiat = ["USD","EUR","GBP"]
MaxQuoteAgeSeconds = 120
SlippageBps = 50
OraclePriority = ["nowpayments","coingecko","manual"]
TwapWindowSeconds = 300
TwapSampleCap = 128

[swap.risk]
PerAddressDailyCapWei = "10000e18"
PerAddressMonthlyCapWei = "300000e18"
PerTxMinWei = "1e18"
PerTxMaxWei = "50000e18"
VelocityWindowSeconds = 600
VelocityMaxMints = 5
SanctionsCheckEnabled = true

[swap.providers]
Allow = ["nowpayments"]

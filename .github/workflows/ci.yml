name: CI
on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.23.0']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
      - name: Set Go flags
        run: echo "GOFLAGS=-buildvcs=false" >> "$GITHUB_ENV"
      - name: Tidy
        run: go mod tidy
      - name: Build
        run: go build -trimpath -ldflags="-s -w" -buildvcs=false -o bin/nhb ./cmd/nhb
      - name: Test
        run: go test ./...

  bugcheck-linux:
    runs-on: ubuntu-latest
    needs: build-test
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'
          check-latest: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Verify Docker availability
        run: |
          docker version
          docker compose version
      - name: Install npm dependencies
        run: npm ci
      - name: Run bugcheck pipeline
        env:
          GOFLAGS: -buildvcs=false
        run: bash scripts/bugcheck.sh
      - name: Upload bugcheck artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bugcheck-artifacts
          path: |
            logs/
            artifacts/bugcheck-*
          if-no-files-found: ignore

  audit-endpoints:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Start swapd
        run: docker compose -f deploy/compose/docker-compose.yml up -d swapd
      - name: Wait for swapd
        run: |
          for i in {1..30}; do
            if curl -sSf http://localhost:7074/healthz >/dev/null; then
              exit 0
            fi
            sleep 2
          done
          echo "swapd did not become healthy" >&2
          docker compose -f deploy/compose/docker-compose.yml logs swapd
          exit 1
      - name: Run stable endpoint regression
        run: make audit:endpoints
      - name: Upload stable endpoint artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stable-endpoints
          path: |
            artifacts/endpoints/newman-report.json
            logs/audit-endpoints.log
      - name: Teardown swapd
        if: always()
        run: docker compose -f deploy/compose/docker-compose.yml down -v

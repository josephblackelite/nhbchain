// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: tx/tx.proto

package txv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RefundThreadRequest requests the refund linkage for a given origin
// transaction hash. The hash must be provided as a hex string (with or without
// the 0x prefix).
type RefundThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginTx      string                 `protobuf:"bytes,1,opt,name=origin_tx,json=originTx,proto3" json:"origin_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefundThreadRequest) Reset() {
	*x = RefundThreadRequest{}
	mi := &file_tx_tx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundThreadRequest) ProtoMessage() {}

func (x *RefundThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tx_tx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundThreadRequest.ProtoReflect.Descriptor instead.
func (*RefundThreadRequest) Descriptor() ([]byte, []int) {
	return file_tx_tx_proto_rawDescGZIP(), []int{0}
}

func (x *RefundThreadRequest) GetOriginTx() string {
	if x != nil {
		return x.OriginTx
	}
	return ""
}

// RefundThreadLink captures an individual refund entry that references the
// origin transaction. Amounts are string encoded to avoid precision loss when
// consumed by JSON/TS clients.
type RefundThreadLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefundTx      string                 `protobuf:"bytes,1,opt,name=refund_tx,json=refundTx,proto3" json:"refund_tx,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefundThreadLink) Reset() {
	*x = RefundThreadLink{}
	mi := &file_tx_tx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundThreadLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundThreadLink) ProtoMessage() {}

func (x *RefundThreadLink) ProtoReflect() protoreflect.Message {
	mi := &file_tx_tx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundThreadLink.ProtoReflect.Descriptor instead.
func (*RefundThreadLink) Descriptor() ([]byte, []int) {
	return file_tx_tx_proto_rawDescGZIP(), []int{1}
}

func (x *RefundThreadLink) GetRefundTx() string {
	if x != nil {
		return x.RefundTx
	}
	return ""
}

func (x *RefundThreadLink) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RefundThreadLink) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// RefundThreadResponse returns the aggregated refund ledger for the supplied
// origin transaction hash.
type RefundThreadResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OriginTx           string                 `protobuf:"bytes,1,opt,name=origin_tx,json=originTx,proto3" json:"origin_tx,omitempty"`
	OriginAmount       string                 `protobuf:"bytes,2,opt,name=origin_amount,json=originAmount,proto3" json:"origin_amount,omitempty"`
	CumulativeRefunded string                 `protobuf:"bytes,3,opt,name=cumulative_refunded,json=cumulativeRefunded,proto3" json:"cumulative_refunded,omitempty"`
	OriginTimestamp    uint64                 `protobuf:"varint,4,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	Refunds            []*RefundThreadLink    `protobuf:"bytes,5,rep,name=refunds,proto3" json:"refunds,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RefundThreadResponse) Reset() {
	*x = RefundThreadResponse{}
	mi := &file_tx_tx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundThreadResponse) ProtoMessage() {}

func (x *RefundThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tx_tx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundThreadResponse.ProtoReflect.Descriptor instead.
func (*RefundThreadResponse) Descriptor() ([]byte, []int) {
	return file_tx_tx_proto_rawDescGZIP(), []int{2}
}

func (x *RefundThreadResponse) GetOriginTx() string {
	if x != nil {
		return x.OriginTx
	}
	return ""
}

func (x *RefundThreadResponse) GetOriginAmount() string {
	if x != nil {
		return x.OriginAmount
	}
	return ""
}

func (x *RefundThreadResponse) GetCumulativeRefunded() string {
	if x != nil {
		return x.CumulativeRefunded
	}
	return ""
}

func (x *RefundThreadResponse) GetOriginTimestamp() uint64 {
	if x != nil {
		return x.OriginTimestamp
	}
	return 0
}

func (x *RefundThreadResponse) GetRefunds() []*RefundThreadLink {
	if x != nil {
		return x.Refunds
	}
	return nil
}

var File_tx_tx_proto protoreflect.FileDescriptor

const file_tx_tx_proto_rawDesc = "" +
	"\n" +
	"\vtx/tx.proto\x12\x05tx.v1\"2\n" +
	"\x13RefundThreadRequest\x12\x1b\n" +
	"\torigin_tx\x18\x01 \x01(\tR\boriginTx\"e\n" +
	"\x10RefundThreadLink\x12\x1b\n" +
	"\trefund_tx\x18\x01 \x01(\tR\brefundTx\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\"\xe7\x01\n" +
	"\x14RefundThreadResponse\x12\x1b\n" +
	"\torigin_tx\x18\x01 \x01(\tR\boriginTx\x12#\n" +
	"\rorigin_amount\x18\x02 \x01(\tR\foriginAmount\x12/\n" +
	"\x13cumulative_refunded\x18\x03 \x01(\tR\x12cumulativeRefunded\x12)\n" +
	"\x10origin_timestamp\x18\x04 \x01(\x04R\x0foriginTimestamp\x121\n" +
	"\arefunds\x18\x05 \x03(\v2\x17.tx.v1.RefundThreadLinkR\arefunds2P\n" +
	"\x05Query\x12G\n" +
	"\fRefundThread\x12\x1a.tx.v1.RefundThreadRequest\x1a\x1b.tx.v1.RefundThreadResponseB\x1bZ\x19nhbchain/proto/tx/v1;txv1b\x06proto3"

var (
	file_tx_tx_proto_rawDescOnce sync.Once
	file_tx_tx_proto_rawDescData []byte
)

func file_tx_tx_proto_rawDescGZIP() []byte {
	file_tx_tx_proto_rawDescOnce.Do(func() {
		file_tx_tx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tx_tx_proto_rawDesc), len(file_tx_tx_proto_rawDesc)))
	})
	return file_tx_tx_proto_rawDescData
}

var file_tx_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tx_tx_proto_goTypes = []any{
	(*RefundThreadRequest)(nil),  // 0: tx.v1.RefundThreadRequest
	(*RefundThreadLink)(nil),     // 1: tx.v1.RefundThreadLink
	(*RefundThreadResponse)(nil), // 2: tx.v1.RefundThreadResponse
}
var file_tx_tx_proto_depIdxs = []int32{
	1, // 0: tx.v1.RefundThreadResponse.refunds:type_name -> tx.v1.RefundThreadLink
	0, // 1: tx.v1.Query.RefundThread:input_type -> tx.v1.RefundThreadRequest
	2, // 2: tx.v1.Query.RefundThread:output_type -> tx.v1.RefundThreadResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tx_tx_proto_init() }
func file_tx_tx_proto_init() {
	if File_tx_tx_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tx_tx_proto_rawDesc), len(file_tx_tx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tx_tx_proto_goTypes,
		DependencyIndexes: file_tx_tx_proto_depIdxs,
		MessageInfos:      file_tx_tx_proto_msgTypes,
	}.Build()
	File_tx_tx_proto = out.File
	file_tx_tx_proto_goTypes = nil
	file_tx_tx_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: gov/v1/tx.proto

package govv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgSubmitProposal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proposer      string                 `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Deposit       string                 `protobuf:"bytes,4,opt,name=deposit,proto3" json:"deposit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgSubmitProposal) Reset() {
	*x = MsgSubmitProposal{}
	mi := &file_gov_v1_tx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgSubmitProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSubmitProposal) ProtoMessage() {}

func (x *MsgSubmitProposal) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSubmitProposal.ProtoReflect.Descriptor instead.
func (*MsgSubmitProposal) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgSubmitProposal) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *MsgSubmitProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgSubmitProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgSubmitProposal) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

type MsgSubmitProposalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgSubmitProposalResponse) Reset() {
	*x = MsgSubmitProposalResponse{}
	mi := &file_gov_v1_tx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgSubmitProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSubmitProposalResponse) ProtoMessage() {}

func (x *MsgSubmitProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSubmitProposalResponse.ProtoReflect.Descriptor instead.
func (*MsgSubmitProposalResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgSubmitProposalResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type MsgVote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Voter         string                 `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	ProposalId    uint64                 `protobuf:"varint,2,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Option        string                 `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgVote) Reset() {
	*x = MsgVote{}
	mi := &file_gov_v1_tx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgVote) ProtoMessage() {}

func (x *MsgVote) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgVote.ProtoReflect.Descriptor instead.
func (*MsgVote) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgVote) GetVoter() string {
	if x != nil {
		return x.Voter
	}
	return ""
}

func (x *MsgVote) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *MsgVote) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

type MsgVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgVoteResponse) Reset() {
	*x = MsgVoteResponse{}
	mi := &file_gov_v1_tx_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgVoteResponse) ProtoMessage() {}

func (x *MsgVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgVoteResponse.ProtoReflect.Descriptor instead.
func (*MsgVoteResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgVoteResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type Pauses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lending       bool                   `protobuf:"varint,1,opt,name=lending,proto3" json:"lending,omitempty"`
	Swap          bool                   `protobuf:"varint,2,opt,name=swap,proto3" json:"swap,omitempty"`
	Escrow        bool                   `protobuf:"varint,3,opt,name=escrow,proto3" json:"escrow,omitempty"`
	Trade         bool                   `protobuf:"varint,4,opt,name=trade,proto3" json:"trade,omitempty"`
	Loyalty       bool                   `protobuf:"varint,5,opt,name=loyalty,proto3" json:"loyalty,omitempty"`
	Potso         bool                   `protobuf:"varint,6,opt,name=potso,proto3" json:"potso,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pauses) Reset() {
	*x = Pauses{}
	mi := &file_gov_v1_tx_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pauses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pauses) ProtoMessage() {}

func (x *Pauses) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pauses.ProtoReflect.Descriptor instead.
func (*Pauses) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *Pauses) GetLending() bool {
	if x != nil {
		return x.Lending
	}
	return false
}

func (x *Pauses) GetSwap() bool {
	if x != nil {
		return x.Swap
	}
	return false
}

func (x *Pauses) GetEscrow() bool {
	if x != nil {
		return x.Escrow
	}
	return false
}

func (x *Pauses) GetTrade() bool {
	if x != nil {
		return x.Trade
	}
	return false
}

func (x *Pauses) GetLoyalty() bool {
	if x != nil {
		return x.Loyalty
	}
	return false
}

func (x *Pauses) GetPotso() bool {
	if x != nil {
		return x.Potso
	}
	return false
}

type MsgSetPauses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Authority     string                 `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Pauses        *Pauses                `protobuf:"bytes,2,opt,name=pauses,proto3" json:"pauses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgSetPauses) Reset() {
	*x = MsgSetPauses{}
	mi := &file_gov_v1_tx_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgSetPauses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetPauses) ProtoMessage() {}

func (x *MsgSetPauses) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetPauses.ProtoReflect.Descriptor instead.
func (*MsgSetPauses) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgSetPauses) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgSetPauses) GetPauses() *Pauses {
	if x != nil {
		return x.Pauses
	}
	return nil
}

type MsgSetPausesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgSetPausesResponse) Reset() {
	*x = MsgSetPausesResponse{}
	mi := &file_gov_v1_tx_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgSetPausesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetPausesResponse) ProtoMessage() {}

func (x *MsgSetPausesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetPausesResponse.ProtoReflect.Descriptor instead.
func (*MsgSetPausesResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgSetPausesResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type MsgDeposit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Depositor     string                 `protobuf:"bytes,1,opt,name=depositor,proto3" json:"depositor,omitempty"`
	ProposalId    uint64                 `protobuf:"varint,2,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgDeposit) Reset() {
	*x = MsgDeposit{}
	mi := &file_gov_v1_tx_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeposit) ProtoMessage() {}

func (x *MsgDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeposit.ProtoReflect.Descriptor instead.
func (*MsgDeposit) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgDeposit) GetDepositor() string {
	if x != nil {
		return x.Depositor
	}
	return ""
}

func (x *MsgDeposit) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *MsgDeposit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type MsgDepositResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgDepositResponse) Reset() {
	*x = MsgDepositResponse{}
	mi := &file_gov_v1_tx_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDepositResponse) ProtoMessage() {}

func (x *MsgDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_tx_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDepositResponse.ProtoReflect.Descriptor instead.
func (*MsgDepositResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgDepositResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

var File_gov_v1_tx_proto protoreflect.FileDescriptor

var file_gov_v1_tx_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x67, 0x6f, 0x76, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x4d, 0x73,
	0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x22, 0x34, 0x0a,
	0x19, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x58, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a,
	0x0f, 0x4d, 0x73, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x94, 0x01, 0x0a, 0x06, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x77,
	0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x74, 0x73, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x6f, 0x74, 0x73, 0x6f,
	0x22, 0x54, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06,
	0x70, 0x61, 0x75, 0x73, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x63, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x12,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x32, 0x83, 0x02, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x4e, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x6f,
	0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x17, 0x2e, 0x67,
	0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x73, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x12, 0x12, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x6e, 0x68, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x6f, 0x76, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_gov_v1_tx_proto_rawDescOnce sync.Once
	file_gov_v1_tx_proto_rawDescData []byte
)

func file_gov_v1_tx_proto_rawDescGZIP() []byte {
	file_gov_v1_tx_proto_rawDescOnce.Do(func() {
		file_gov_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gov_v1_tx_proto_rawDesc), len(file_gov_v1_tx_proto_rawDesc)))
	})
	return file_gov_v1_tx_proto_rawDescData
}

var file_gov_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_gov_v1_tx_proto_goTypes = []any{
	(*MsgSubmitProposal)(nil),         // 0: gov.v1.MsgSubmitProposal
	(*MsgSubmitProposalResponse)(nil), // 1: gov.v1.MsgSubmitProposalResponse
	(*MsgVote)(nil),                   // 2: gov.v1.MsgVote
	(*MsgVoteResponse)(nil),           // 3: gov.v1.MsgVoteResponse
	(*Pauses)(nil),                    // 4: gov.v1.Pauses
	(*MsgSetPauses)(nil),              // 5: gov.v1.MsgSetPauses
	(*MsgSetPausesResponse)(nil),      // 6: gov.v1.MsgSetPausesResponse
	(*MsgDeposit)(nil),                // 7: gov.v1.MsgDeposit
	(*MsgDepositResponse)(nil),        // 8: gov.v1.MsgDepositResponse
}
var file_gov_v1_tx_proto_depIdxs = []int32{
	4, // 0: gov.v1.MsgSetPauses.pauses:type_name -> gov.v1.Pauses
	0, // 1: gov.v1.Msg.SubmitProposal:input_type -> gov.v1.MsgSubmitProposal
	2, // 2: gov.v1.Msg.Vote:input_type -> gov.v1.MsgVote
	5, // 3: gov.v1.Msg.SetPauses:input_type -> gov.v1.MsgSetPauses
	7, // 4: gov.v1.Msg.Deposit:input_type -> gov.v1.MsgDeposit
	1, // 5: gov.v1.Msg.SubmitProposal:output_type -> gov.v1.MsgSubmitProposalResponse
	3, // 6: gov.v1.Msg.Vote:output_type -> gov.v1.MsgVoteResponse
	6, // 7: gov.v1.Msg.SetPauses:output_type -> gov.v1.MsgSetPausesResponse
	8, // 8: gov.v1.Msg.Deposit:output_type -> gov.v1.MsgDepositResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gov_v1_tx_proto_init() }
func file_gov_v1_tx_proto_init() {
	if File_gov_v1_tx_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gov_v1_tx_proto_rawDesc), len(file_gov_v1_tx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gov_v1_tx_proto_goTypes,
		DependencyIndexes: file_gov_v1_tx_proto_depIdxs,
		MessageInfos:      file_gov_v1_tx_proto_msgTypes,
	}.Build()
	File_gov_v1_tx_proto = out.File
	file_gov_v1_tx_proto_goTypes = nil
	file_gov_v1_tx_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: gov/v1/query.proto

package govv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalStatus int32

const (
	ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED    ProposalStatus = 0
	ProposalStatus_PROPOSAL_STATUS_DEPOSIT_PERIOD ProposalStatus = 1
	ProposalStatus_PROPOSAL_STATUS_VOTING_PERIOD  ProposalStatus = 2
	ProposalStatus_PROPOSAL_STATUS_PASSED         ProposalStatus = 3
	ProposalStatus_PROPOSAL_STATUS_REJECTED       ProposalStatus = 4
	ProposalStatus_PROPOSAL_STATUS_FAILED         ProposalStatus = 5
	ProposalStatus_PROPOSAL_STATUS_EXPIRED        ProposalStatus = 6
	ProposalStatus_PROPOSAL_STATUS_EXECUTED       ProposalStatus = 7
)

// Enum value maps for ProposalStatus.
var (
	ProposalStatus_name = map[int32]string{
		0: "PROPOSAL_STATUS_UNSPECIFIED",
		1: "PROPOSAL_STATUS_DEPOSIT_PERIOD",
		2: "PROPOSAL_STATUS_VOTING_PERIOD",
		3: "PROPOSAL_STATUS_PASSED",
		4: "PROPOSAL_STATUS_REJECTED",
		5: "PROPOSAL_STATUS_FAILED",
		6: "PROPOSAL_STATUS_EXPIRED",
		7: "PROPOSAL_STATUS_EXECUTED",
	}
	ProposalStatus_value = map[string]int32{
		"PROPOSAL_STATUS_UNSPECIFIED":    0,
		"PROPOSAL_STATUS_DEPOSIT_PERIOD": 1,
		"PROPOSAL_STATUS_VOTING_PERIOD":  2,
		"PROPOSAL_STATUS_PASSED":         3,
		"PROPOSAL_STATUS_REJECTED":       4,
		"PROPOSAL_STATUS_FAILED":         5,
		"PROPOSAL_STATUS_EXPIRED":        6,
		"PROPOSAL_STATUS_EXECUTED":       7,
	}
)

func (x ProposalStatus) Enum() *ProposalStatus {
	p := new(ProposalStatus)
	*p = x
	return p
}

func (x ProposalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gov_v1_query_proto_enumTypes[0].Descriptor()
}

func (ProposalStatus) Type() protoreflect.EnumType {
	return &file_gov_v1_query_proto_enumTypes[0]
}

func (x ProposalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalStatus.Descriptor instead.
func (ProposalStatus) EnumDescriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{0}
}

type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summary         string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	MetadataUri     string                 `protobuf:"bytes,4,opt,name=metadata_uri,json=metadataUri,proto3" json:"metadata_uri,omitempty"`
	Proposer        string                 `protobuf:"bytes,5,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Status          ProposalStatus         `protobuf:"varint,6,opt,name=status,proto3,enum=gov.v1.ProposalStatus" json:"status,omitempty"`
	Deposit         string                 `protobuf:"bytes,7,opt,name=deposit,proto3" json:"deposit,omitempty"`
	SubmitTime      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	VotingStartTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=voting_start_time,json=votingStartTime,proto3" json:"voting_start_time,omitempty"`
	VotingEndTime   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=voting_end_time,json=votingEndTime,proto3" json:"voting_end_time,omitempty"`
	TimelockEndTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=timelock_end_time,json=timelockEndTime,proto3" json:"timelock_end_time,omitempty"`
	Target          string                 `protobuf:"bytes,12,opt,name=target,proto3" json:"target,omitempty"`
	ProposedChange  string                 `protobuf:"bytes,13,opt,name=proposed_change,json=proposedChange,proto3" json:"proposed_change,omitempty"`
	Queued          bool                   `protobuf:"varint,14,opt,name=queued,proto3" json:"queued,omitempty"`
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *Proposal) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Proposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Proposal) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Proposal) GetMetadataUri() string {
	if x != nil {
		return x.MetadataUri
	}
	return ""
}

func (x *Proposal) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *Proposal) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

func (x *Proposal) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *Proposal) GetSubmitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitTime
	}
	return nil
}

func (x *Proposal) GetVotingStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingStartTime
	}
	return nil
}

func (x *Proposal) GetVotingEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingEndTime
	}
	return nil
}

func (x *Proposal) GetTimelockEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TimelockEndTime
	}
	return nil
}

func (x *Proposal) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Proposal) GetProposedChange() string {
	if x != nil {
		return x.ProposedChange
	}
	return ""
}

func (x *Proposal) GetQueued() bool {
	if x != nil {
		return x.Queued
	}
	return false
}

type ProposalTally struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId       uint64         `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Status           ProposalStatus `protobuf:"varint,2,opt,name=status,proto3,enum=gov.v1.ProposalStatus" json:"status,omitempty"`
	TurnoutBps       uint64         `protobuf:"varint,3,opt,name=turnout_bps,json=turnoutBps,proto3" json:"turnout_bps,omitempty"`
	QuorumBps        uint64         `protobuf:"varint,4,opt,name=quorum_bps,json=quorumBps,proto3" json:"quorum_bps,omitempty"`
	YesPowerBps      uint64         `protobuf:"varint,5,opt,name=yes_power_bps,json=yesPowerBps,proto3" json:"yes_power_bps,omitempty"`
	NoPowerBps       uint64         `protobuf:"varint,6,opt,name=no_power_bps,json=noPowerBps,proto3" json:"no_power_bps,omitempty"`
	AbstainPowerBps  uint64         `protobuf:"varint,7,opt,name=abstain_power_bps,json=abstainPowerBps,proto3" json:"abstain_power_bps,omitempty"`
	YesRatioBps      uint64         `protobuf:"varint,8,opt,name=yes_ratio_bps,json=yesRatioBps,proto3" json:"yes_ratio_bps,omitempty"`
	PassThresholdBps uint64         `protobuf:"varint,9,opt,name=pass_threshold_bps,json=passThresholdBps,proto3" json:"pass_threshold_bps,omitempty"`
	TotalBallots     uint64         `protobuf:"varint,10,opt,name=total_ballots,json=totalBallots,proto3" json:"total_ballots,omitempty"`
}

func (x *ProposalTally) Reset() {
	*x = ProposalTally{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalTally) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalTally) ProtoMessage() {}

func (x *ProposalTally) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalTally.ProtoReflect.Descriptor instead.
func (*ProposalTally) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *ProposalTally) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *ProposalTally) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

func (x *ProposalTally) GetTurnoutBps() uint64 {
	if x != nil {
		return x.TurnoutBps
	}
	return 0
}

func (x *ProposalTally) GetQuorumBps() uint64 {
	if x != nil {
		return x.QuorumBps
	}
	return 0
}

func (x *ProposalTally) GetYesPowerBps() uint64 {
	if x != nil {
		return x.YesPowerBps
	}
	return 0
}

func (x *ProposalTally) GetNoPowerBps() uint64 {
	if x != nil {
		return x.NoPowerBps
	}
	return 0
}

func (x *ProposalTally) GetAbstainPowerBps() uint64 {
	if x != nil {
		return x.AbstainPowerBps
	}
	return 0
}

func (x *ProposalTally) GetYesRatioBps() uint64 {
	if x != nil {
		return x.YesRatioBps
	}
	return 0
}

func (x *ProposalTally) GetPassThresholdBps() uint64 {
	if x != nil {
		return x.PassThresholdBps
	}
	return 0
}

func (x *ProposalTally) GetTotalBallots() uint64 {
	if x != nil {
		return x.TotalBallots
	}
	return 0
}

type GetProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProposalRequest) Reset() {
	*x = GetProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalRequest) ProtoMessage() {}

func (x *GetProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalRequest.ProtoReflect.Descriptor instead.
func (*GetProposalRequest) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetProposalRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal *Proposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (x *GetProposalResponse) Reset() {
	*x = GetProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalResponse) ProtoMessage() {}

func (x *GetProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalResponse.ProtoReflect.Descriptor instead.
func (*GetProposalResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetProposalResponse) GetProposal() *Proposal {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type ListProposalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize     uint32         `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string         `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	StatusFilter ProposalStatus `protobuf:"varint,3,opt,name=status_filter,json=statusFilter,proto3,enum=gov.v1.ProposalStatus" json:"status_filter,omitempty"`
}

func (x *ListProposalsRequest) Reset() {
	*x = ListProposalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProposalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProposalsRequest) ProtoMessage() {}

func (x *ListProposalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProposalsRequest.ProtoReflect.Descriptor instead.
func (*ListProposalsRequest) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{4}
}

func (x *ListProposalsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListProposalsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListProposalsRequest) GetStatusFilter() ProposalStatus {
	if x != nil {
		return x.StatusFilter
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

type ListProposalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposals     []*Proposal `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	NextPageToken string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListProposalsResponse) Reset() {
	*x = ListProposalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProposalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProposalsResponse) ProtoMessage() {}

func (x *ListProposalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProposalsResponse.ProtoReflect.Descriptor instead.
func (*ListProposalsResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{5}
}

func (x *ListProposalsResponse) GetProposals() []*Proposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

func (x *ListProposalsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetTallyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTallyRequest) Reset() {
	*x = GetTallyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTallyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTallyRequest) ProtoMessage() {}

func (x *GetTallyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTallyRequest.ProtoReflect.Descriptor instead.
func (*GetTallyRequest) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{6}
}

func (x *GetTallyRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTallyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tally *ProposalTally `protobuf:"bytes,1,opt,name=tally,proto3" json:"tally,omitempty"`
}

func (x *GetTallyResponse) Reset() {
	*x = GetTallyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gov_v1_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTallyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTallyResponse) ProtoMessage() {}

func (x *GetTallyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gov_v1_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTallyResponse.ProtoReflect.Descriptor instead.
func (*GetTallyResponse) Descriptor() ([]byte, []int) {
	return file_gov_v1_query_proto_rawDescGZIP(), []int{7}
}

func (x *GetTallyResponse) GetTally() *ProposalTally {
	if x != nil {
		return x.Tally
	}
	return nil
}

var File_gov_v1_query_proto protoreflect.FileDescriptor

var file_gov_v1_query_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x6f, 0x76, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x04,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x46, 0x0a, 0x11, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x22, 0x89, 0x03,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x75, 0x74, 0x42, 0x70,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x62, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x42, 0x70, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x79, 0x65, 0x73, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x79, 0x65, 0x73, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x42, 0x70, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x62, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x6f, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x42, 0x70, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x62, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x61, 0x62, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42,
	0x70, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x79, 0x65, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f,
	0x62, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x79, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x42, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x42, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61,
	0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x22, 0x8f, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54,
	0x61, 0x6c, 0x6c, 0x79, 0x52, 0x05, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2a, 0x89, 0x02, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x1b, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f,
	0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x45,
	0x52, 0x49, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53,
	0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17,
	0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f,
	0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x45, 0x44, 0x10, 0x07, 0x32, 0xdc, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67,
	0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x76,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6c, 0x79, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67,
	0x6f, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x6e, 0x68, 0x62, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x76, 0x31, 0x3b,
	0x67, 0x6f, 0x76, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gov_v1_query_proto_rawDescOnce sync.Once
	file_gov_v1_query_proto_rawDescData = file_gov_v1_query_proto_rawDesc
)

func file_gov_v1_query_proto_rawDescGZIP() []byte {
	file_gov_v1_query_proto_rawDescOnce.Do(func() {
		file_gov_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_gov_v1_query_proto_rawDescData)
	})
	return file_gov_v1_query_proto_rawDescData
}

var file_gov_v1_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gov_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gov_v1_query_proto_goTypes = []interface{}{
	(ProposalStatus)(0),           // 0: gov.v1.ProposalStatus
	(*Proposal)(nil),              // 1: gov.v1.Proposal
	(*ProposalTally)(nil),         // 2: gov.v1.ProposalTally
	(*GetProposalRequest)(nil),    // 3: gov.v1.GetProposalRequest
	(*GetProposalResponse)(nil),   // 4: gov.v1.GetProposalResponse
	(*ListProposalsRequest)(nil),  // 5: gov.v1.ListProposalsRequest
	(*ListProposalsResponse)(nil), // 6: gov.v1.ListProposalsResponse
	(*GetTallyRequest)(nil),       // 7: gov.v1.GetTallyRequest
	(*GetTallyResponse)(nil),      // 8: gov.v1.GetTallyResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_gov_v1_query_proto_depIdxs = []int32{
	0,  // 0: gov.v1.Proposal.status:type_name -> gov.v1.ProposalStatus
	9,  // 1: gov.v1.Proposal.submit_time:type_name -> google.protobuf.Timestamp
	9,  // 2: gov.v1.Proposal.voting_start_time:type_name -> google.protobuf.Timestamp
	9,  // 3: gov.v1.Proposal.voting_end_time:type_name -> google.protobuf.Timestamp
	9,  // 4: gov.v1.Proposal.timelock_end_time:type_name -> google.protobuf.Timestamp
	0,  // 5: gov.v1.ProposalTally.status:type_name -> gov.v1.ProposalStatus
	1,  // 6: gov.v1.GetProposalResponse.proposal:type_name -> gov.v1.Proposal
	0,  // 7: gov.v1.ListProposalsRequest.status_filter:type_name -> gov.v1.ProposalStatus
	1,  // 8: gov.v1.ListProposalsResponse.proposals:type_name -> gov.v1.Proposal
	2,  // 9: gov.v1.GetTallyResponse.tally:type_name -> gov.v1.ProposalTally
	3,  // 10: gov.v1.Query.GetProposal:input_type -> gov.v1.GetProposalRequest
	5,  // 11: gov.v1.Query.ListProposals:input_type -> gov.v1.ListProposalsRequest
	7,  // 12: gov.v1.Query.GetTally:input_type -> gov.v1.GetTallyRequest
	4,  // 13: gov.v1.Query.GetProposal:output_type -> gov.v1.GetProposalResponse
	6,  // 14: gov.v1.Query.ListProposals:output_type -> gov.v1.ListProposalsResponse
	8,  // 15: gov.v1.Query.GetTally:output_type -> gov.v1.GetTallyResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_gov_v1_query_proto_init() }
func file_gov_v1_query_proto_init() {
	if File_gov_v1_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gov_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalTally); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProposalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProposalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTallyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gov_v1_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTallyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gov_v1_query_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gov_v1_query_proto_goTypes,
		DependencyIndexes: file_gov_v1_query_proto_depIdxs,
		EnumInfos:         file_gov_v1_query_proto_enumTypes,
		MessageInfos:      file_gov_v1_query_proto_msgTypes,
	}.Build()
	File_gov_v1_query_proto = out.File
	file_gov_v1_query_proto_rawDesc = nil
	file_gov_v1_query_proto_goTypes = nil
	file_gov_v1_query_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: network/v1/network.proto

package networkv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GossipMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          uint32                 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GossipMessage) Reset() {
	*x = GossipMessage{}
	mi := &file_network_v1_network_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipMessage) ProtoMessage() {}

func (x *GossipMessage) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipMessage.ProtoReflect.Descriptor instead.
func (*GossipMessage) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{0}
}

func (x *GossipMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GossipMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnixMillis    int64                  `protobuf:"varint,1,opt,name=unix_millis,json=unixMillis,proto3" json:"unix_millis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_network_v1_network_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{1}
}

func (x *Heartbeat) GetUnixMillis() int64 {
	if x != nil {
		return x.UnixMillis
	}
	return 0
}

type NetworkEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*NetworkEnvelope_Gossip
	//	*NetworkEnvelope_Heartbeat
	Event         isNetworkEnvelope_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEnvelope) Reset() {
	*x = NetworkEnvelope{}
	mi := &file_network_v1_network_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEnvelope) ProtoMessage() {}

func (x *NetworkEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEnvelope.ProtoReflect.Descriptor instead.
func (*NetworkEnvelope) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkEnvelope) GetEvent() isNetworkEnvelope_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *NetworkEnvelope) GetGossip() *GossipMessage {
	if x != nil {
		if x, ok := x.Event.(*NetworkEnvelope_Gossip); ok {
			return x.Gossip
		}
	}
	return nil
}

func (x *NetworkEnvelope) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Event.(*NetworkEnvelope_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

type isNetworkEnvelope_Event interface {
	isNetworkEnvelope_Event()
}

type NetworkEnvelope_Gossip struct {
	Gossip *GossipMessage `protobuf:"bytes,1,opt,name=gossip,proto3,oneof"`
}

type NetworkEnvelope_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

func (*NetworkEnvelope_Gossip) isNetworkEnvelope_Event() {}

func (*NetworkEnvelope_Heartbeat) isNetworkEnvelope_Event() {}

type GossipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Envelope      *NetworkEnvelope       `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GossipRequest) Reset() {
	*x = GossipRequest{}
	mi := &file_network_v1_network_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipRequest) ProtoMessage() {}

func (x *GossipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipRequest.ProtoReflect.Descriptor instead.
func (*GossipRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{3}
}

func (x *GossipRequest) GetEnvelope() *NetworkEnvelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

type GossipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Envelope      *NetworkEnvelope       `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GossipResponse) Reset() {
	*x = GossipResponse{}
	mi := &file_network_v1_network_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipResponse) ProtoMessage() {}

func (x *GossipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipResponse.ProtoReflect.Descriptor instead.
func (*GossipResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{4}
}

func (x *GossipResponse) GetEnvelope() *NetworkEnvelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

type GetViewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViewRequest) Reset() {
	*x = GetViewRequest{}
	mi := &file_network_v1_network_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewRequest) ProtoMessage() {}

func (x *GetViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewRequest.ProtoReflect.Descriptor instead.
func (*GetViewRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{5}
}

type NetworkCounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Inbound       int32                  `protobuf:"varint,2,opt,name=inbound,proto3" json:"inbound,omitempty"`
	Outbound      int32                  `protobuf:"varint,3,opt,name=outbound,proto3" json:"outbound,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkCounts) Reset() {
	*x = NetworkCounts{}
	mi := &file_network_v1_network_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkCounts) ProtoMessage() {}

func (x *NetworkCounts) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkCounts.ProtoReflect.Descriptor instead.
func (*NetworkCounts) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkCounts) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NetworkCounts) GetInbound() int32 {
	if x != nil {
		return x.Inbound
	}
	return 0
}

func (x *NetworkCounts) GetOutbound() int32 {
	if x != nil {
		return x.Outbound
	}
	return 0
}

type NetworkLimits struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaxPeers       int32                  `protobuf:"varint,1,opt,name=max_peers,json=maxPeers,proto3" json:"max_peers,omitempty"`
	MaxInbound     int32                  `protobuf:"varint,2,opt,name=max_inbound,json=maxInbound,proto3" json:"max_inbound,omitempty"`
	MaxOutbound    int32                  `protobuf:"varint,3,opt,name=max_outbound,json=maxOutbound,proto3" json:"max_outbound,omitempty"`
	RateMsgsPerSec float64                `protobuf:"fixed64,4,opt,name=rate_msgs_per_sec,json=rateMsgsPerSec,proto3" json:"rate_msgs_per_sec,omitempty"`
	Burst          float64                `protobuf:"fixed64,5,opt,name=burst,proto3" json:"burst,omitempty"`
	BanScore       int32                  `protobuf:"varint,6,opt,name=ban_score,json=banScore,proto3" json:"ban_score,omitempty"`
	GreyScore      int32                  `protobuf:"varint,7,opt,name=grey_score,json=greyScore,proto3" json:"grey_score,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkLimits) Reset() {
	*x = NetworkLimits{}
	mi := &file_network_v1_network_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkLimits) ProtoMessage() {}

func (x *NetworkLimits) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkLimits.ProtoReflect.Descriptor instead.
func (*NetworkLimits) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkLimits) GetMaxPeers() int32 {
	if x != nil {
		return x.MaxPeers
	}
	return 0
}

func (x *NetworkLimits) GetMaxInbound() int32 {
	if x != nil {
		return x.MaxInbound
	}
	return 0
}

func (x *NetworkLimits) GetMaxOutbound() int32 {
	if x != nil {
		return x.MaxOutbound
	}
	return 0
}

func (x *NetworkLimits) GetRateMsgsPerSec() float64 {
	if x != nil {
		return x.RateMsgsPerSec
	}
	return 0
}

func (x *NetworkLimits) GetBurst() float64 {
	if x != nil {
		return x.Burst
	}
	return 0
}

func (x *NetworkLimits) GetBanScore() int32 {
	if x != nil {
		return x.BanScore
	}
	return 0
}

func (x *NetworkLimits) GetGreyScore() int32 {
	if x != nil {
		return x.GreyScore
	}
	return 0
}

type NetworkSelf struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeId          string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ProtocolVersion uint32                 `protobuf:"varint,2,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	ClientVersion   string                 `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkSelf) Reset() {
	*x = NetworkSelf{}
	mi := &file_network_v1_network_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkSelf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSelf) ProtoMessage() {}

func (x *NetworkSelf) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSelf.ProtoReflect.Descriptor instead.
func (*NetworkSelf) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkSelf) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NetworkSelf) GetProtocolVersion() uint32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *NetworkSelf) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

type SeedInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	NotBefore     int64                  `protobuf:"varint,4,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter      int64                  `protobuf:"varint,5,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeedInfo) Reset() {
	*x = SeedInfo{}
	mi := &file_network_v1_network_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedInfo) ProtoMessage() {}

func (x *SeedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedInfo.ProtoReflect.Descriptor instead.
func (*SeedInfo) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{9}
}

func (x *SeedInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SeedInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SeedInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SeedInfo) GetNotBefore() int64 {
	if x != nil {
		return x.NotBefore
	}
	return 0
}

func (x *SeedInfo) GetNotAfter() int64 {
	if x != nil {
		return x.NotAfter
	}
	return 0
}

type NetworkView struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NetworkId       uint64                 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	GenesisHash     []byte                 `protobuf:"bytes,2,opt,name=genesis_hash,json=genesisHash,proto3" json:"genesis_hash,omitempty"`
	Counts          *NetworkCounts         `protobuf:"bytes,3,opt,name=counts,proto3" json:"counts,omitempty"`
	Limits          *NetworkLimits         `protobuf:"bytes,4,opt,name=limits,proto3" json:"limits,omitempty"`
	Self            *NetworkSelf           `protobuf:"bytes,5,opt,name=self,proto3" json:"self,omitempty"`
	Bootnodes       []string               `protobuf:"bytes,6,rep,name=bootnodes,proto3" json:"bootnodes,omitempty"`
	PersistentPeers []string               `protobuf:"bytes,7,rep,name=persistent_peers,json=persistentPeers,proto3" json:"persistent_peers,omitempty"`
	Seeds           []*SeedInfo            `protobuf:"bytes,8,rep,name=seeds,proto3" json:"seeds,omitempty"`
	ListenAddrs     []string               `protobuf:"bytes,9,rep,name=listen_addrs,json=listenAddrs,proto3" json:"listen_addrs,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkView) Reset() {
	*x = NetworkView{}
	mi := &file_network_v1_network_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkView) ProtoMessage() {}

func (x *NetworkView) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkView.ProtoReflect.Descriptor instead.
func (*NetworkView) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkView) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *NetworkView) GetGenesisHash() []byte {
	if x != nil {
		return x.GenesisHash
	}
	return nil
}

func (x *NetworkView) GetCounts() *NetworkCounts {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *NetworkView) GetLimits() *NetworkLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *NetworkView) GetSelf() *NetworkSelf {
	if x != nil {
		return x.Self
	}
	return nil
}

func (x *NetworkView) GetBootnodes() []string {
	if x != nil {
		return x.Bootnodes
	}
	return nil
}

func (x *NetworkView) GetPersistentPeers() []string {
	if x != nil {
		return x.PersistentPeers
	}
	return nil
}

func (x *NetworkView) GetSeeds() []*SeedInfo {
	if x != nil {
		return x.Seeds
	}
	return nil
}

func (x *NetworkView) GetListenAddrs() []string {
	if x != nil {
		return x.ListenAddrs
	}
	return nil
}

type GetViewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	View          *NetworkView           `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViewResponse) Reset() {
	*x = GetViewResponse{}
	mi := &file_network_v1_network_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewResponse) ProtoMessage() {}

func (x *GetViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewResponse.ProtoReflect.Descriptor instead.
func (*GetViewResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{11}
}

func (x *GetViewResponse) GetView() *NetworkView {
	if x != nil {
		return x.View
	}
	return nil
}

type ListPeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	mi := &file_network_v1_network_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{12}
}

type PeerNetInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeId          string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address         string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Direction       string                 `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`
	State           string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Score           int32                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	LastSeenUnix    int64                  `protobuf:"varint,6,opt,name=last_seen_unix,json=lastSeenUnix,proto3" json:"last_seen_unix,omitempty"`
	Fails           int32                  `protobuf:"varint,7,opt,name=fails,proto3" json:"fails,omitempty"`
	BannedUntilUnix int64                  `protobuf:"varint,8,opt,name=banned_until_unix,json=bannedUntilUnix,proto3" json:"banned_until_unix,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PeerNetInfo) Reset() {
	*x = PeerNetInfo{}
	mi := &file_network_v1_network_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerNetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerNetInfo) ProtoMessage() {}

func (x *PeerNetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerNetInfo.ProtoReflect.Descriptor instead.
func (*PeerNetInfo) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{13}
}

func (x *PeerNetInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PeerNetInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PeerNetInfo) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *PeerNetInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PeerNetInfo) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PeerNetInfo) GetLastSeenUnix() int64 {
	if x != nil {
		return x.LastSeenUnix
	}
	return 0
}

func (x *PeerNetInfo) GetFails() int32 {
	if x != nil {
		return x.Fails
	}
	return 0
}

func (x *PeerNetInfo) GetBannedUntilUnix() int64 {
	if x != nil {
		return x.BannedUntilUnix
	}
	return 0
}

type ListPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerNetInfo         `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	mi := &file_network_v1_network_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{14}
}

func (x *ListPeersResponse) GetPeers() []*PeerNetInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

type DialPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DialPeerRequest) Reset() {
	*x = DialPeerRequest{}
	mi := &file_network_v1_network_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DialPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialPeerRequest) ProtoMessage() {}

func (x *DialPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialPeerRequest.ProtoReflect.Descriptor instead.
func (*DialPeerRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{15}
}

func (x *DialPeerRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type DialPeerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DialPeerResponse) Reset() {
	*x = DialPeerResponse{}
	mi := &file_network_v1_network_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DialPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialPeerResponse) ProtoMessage() {}

func (x *DialPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialPeerResponse.ProtoReflect.Descriptor instead.
func (*DialPeerResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{16}
}

type BanPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Seconds       int64                  `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanPeerRequest) Reset() {
	*x = BanPeerRequest{}
	mi := &file_network_v1_network_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanPeerRequest) ProtoMessage() {}

func (x *BanPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanPeerRequest.ProtoReflect.Descriptor instead.
func (*BanPeerRequest) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{17}
}

func (x *BanPeerRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BanPeerRequest) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type BanPeerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanPeerResponse) Reset() {
	*x = BanPeerResponse{}
	mi := &file_network_v1_network_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanPeerResponse) ProtoMessage() {}

func (x *BanPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v1_network_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanPeerResponse.ProtoReflect.Descriptor instead.
func (*BanPeerResponse) Descriptor() ([]byte, []int) {
	return file_network_v1_network_proto_rawDescGZIP(), []int{18}
}

var File_network_v1_network_proto protoreflect.FileDescriptor

const file_network_v1_network_proto_rawDesc = "" +
	"\n" +
	"\x18network/v1/network.proto\x12\n" +
	"network.v1\"=\n" +
	"\rGossipMessage\x12\x12\n" +
	"\x04type\x18\x01 \x01(\rR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\",\n" +
	"\tHeartbeat\x12\x1f\n" +
	"\vunix_millis\x18\x01 \x01(\x03R\n" +
	"unixMillis\"\x86\x01\n" +
	"\x0fNetworkEnvelope\x123\n" +
	"\x06gossip\x18\x01 \x01(\v2\x19.network.v1.GossipMessageH\x00R\x06gossip\x125\n" +
	"\theartbeat\x18\x02 \x01(\v2\x15.network.v1.HeartbeatH\x00R\theartbeatB\a\n" +
	"\x05event\"H\n" +
	"\rGossipRequest\x127\n" +
	"\benvelope\x18\x01 \x01(\v2\x1b.network.v1.NetworkEnvelopeR\benvelope\"I\n" +
	"\x0eGossipResponse\x127\n" +
	"\benvelope\x18\x01 \x01(\v2\x1b.network.v1.NetworkEnvelopeR\benvelope\"\x10\n" +
	"\x0eGetViewRequest\"[\n" +
	"\rNetworkCounts\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x18\n" +
	"\ainbound\x18\x02 \x01(\x05R\ainbound\x12\x1a\n" +
	"\boutbound\x18\x03 \x01(\x05R\boutbound\"\xed\x01\n" +
	"\rNetworkLimits\x12\x1b\n" +
	"\tmax_peers\x18\x01 \x01(\x05R\bmaxPeers\x12\x1f\n" +
	"\vmax_inbound\x18\x02 \x01(\x05R\n" +
	"maxInbound\x12!\n" +
	"\fmax_outbound\x18\x03 \x01(\x05R\vmaxOutbound\x12)\n" +
	"\x11rate_msgs_per_sec\x18\x04 \x01(\x01R\x0erateMsgsPerSec\x12\x14\n" +
	"\x05burst\x18\x05 \x01(\x01R\x05burst\x12\x1b\n" +
	"\tban_score\x18\x06 \x01(\x05R\bbanScore\x12\x1d\n" +
	"\n" +
	"grey_score\x18\a \x01(\x05R\tgreyScore\"x\n" +
	"\vNetworkSelf\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12)\n" +
	"\x10protocol_version\x18\x02 \x01(\rR\x0fprotocolVersion\x12%\n" +
	"\x0eclient_version\x18\x03 \x01(\tR\rclientVersion\"\x91\x01\n" +
	"\bSeedInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x1d\n" +
	"\n" +
	"not_before\x18\x04 \x01(\x03R\tnotBefore\x12\x1b\n" +
	"\tnot_after\x18\x05 \x01(\x03R\bnotAfter\"\xfa\x02\n" +
	"\vNetworkView\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\x04R\tnetworkId\x12!\n" +
	"\fgenesis_hash\x18\x02 \x01(\fR\vgenesisHash\x121\n" +
	"\x06counts\x18\x03 \x01(\v2\x19.network.v1.NetworkCountsR\x06counts\x121\n" +
	"\x06limits\x18\x04 \x01(\v2\x19.network.v1.NetworkLimitsR\x06limits\x12+\n" +
	"\x04self\x18\x05 \x01(\v2\x17.network.v1.NetworkSelfR\x04self\x12\x1c\n" +
	"\tbootnodes\x18\x06 \x03(\tR\tbootnodes\x12)\n" +
	"\x10persistent_peers\x18\a \x03(\tR\x0fpersistentPeers\x12*\n" +
	"\x05seeds\x18\b \x03(\v2\x14.network.v1.SeedInfoR\x05seeds\x12!\n" +
	"\flisten_addrs\x18\t \x03(\tR\vlistenAddrs\">\n" +
	"\x0fGetViewResponse\x12+\n" +
	"\x04view\x18\x01 \x01(\v2\x17.network.v1.NetworkViewR\x04view\"\x12\n" +
	"\x10ListPeersRequest\"\xf2\x01\n" +
	"\vPeerNetInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\tR\tdirection\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x05R\x05score\x12$\n" +
	"\x0elast_seen_unix\x18\x06 \x01(\x03R\flastSeenUnix\x12\x14\n" +
	"\x05fails\x18\a \x01(\x05R\x05fails\x12*\n" +
	"\x11banned_until_unix\x18\b \x01(\x03R\x0fbannedUntilUnix\"B\n" +
	"\x11ListPeersResponse\x12-\n" +
	"\x05peers\x18\x01 \x03(\v2\x17.network.v1.PeerNetInfoR\x05peers\")\n" +
	"\x0fDialPeerRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\"\x12\n" +
	"\x10DialPeerResponse\"C\n" +
	"\x0eBanPeerRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aseconds\x18\x02 \x01(\x03R\aseconds\"\x11\n" +
	"\x0fBanPeerResponse2\xee\x02\n" +
	"\x0eNetworkService\x12C\n" +
	"\x06Gossip\x12\x19.network.v1.GossipRequest\x1a\x1a.network.v1.GossipResponse(\x010\x01\x12B\n" +
	"\aGetView\x12\x1a.network.v1.GetViewRequest\x1a\x1b.network.v1.GetViewResponse\x12H\n" +
	"\tListPeers\x12\x1c.network.v1.ListPeersRequest\x1a\x1d.network.v1.ListPeersResponse\x12E\n" +
	"\bDialPeer\x12\x1b.network.v1.DialPeerRequest\x1a\x1c.network.v1.DialPeerResponse\x12B\n" +
	"\aBanPeer\x12\x1a.network.v1.BanPeerRequest\x1a\x1b.network.v1.BanPeerResponseB%Z#nhbchain/proto/network/v1;networkv1b\x06proto3"

var (
	file_network_v1_network_proto_rawDescOnce sync.Once
	file_network_v1_network_proto_rawDescData []byte
)

func file_network_v1_network_proto_rawDescGZIP() []byte {
	file_network_v1_network_proto_rawDescOnce.Do(func() {
		file_network_v1_network_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_network_v1_network_proto_rawDesc), len(file_network_v1_network_proto_rawDesc)))
	})
	return file_network_v1_network_proto_rawDescData
}

var file_network_v1_network_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_network_v1_network_proto_goTypes = []any{
	(*GossipMessage)(nil),     // 0: network.v1.GossipMessage
	(*Heartbeat)(nil),         // 1: network.v1.Heartbeat
	(*NetworkEnvelope)(nil),   // 2: network.v1.NetworkEnvelope
	(*GossipRequest)(nil),     // 3: network.v1.GossipRequest
	(*GossipResponse)(nil),    // 4: network.v1.GossipResponse
	(*GetViewRequest)(nil),    // 5: network.v1.GetViewRequest
	(*NetworkCounts)(nil),     // 6: network.v1.NetworkCounts
	(*NetworkLimits)(nil),     // 7: network.v1.NetworkLimits
	(*NetworkSelf)(nil),       // 8: network.v1.NetworkSelf
	(*SeedInfo)(nil),          // 9: network.v1.SeedInfo
	(*NetworkView)(nil),       // 10: network.v1.NetworkView
	(*GetViewResponse)(nil),   // 11: network.v1.GetViewResponse
	(*ListPeersRequest)(nil),  // 12: network.v1.ListPeersRequest
	(*PeerNetInfo)(nil),       // 13: network.v1.PeerNetInfo
	(*ListPeersResponse)(nil), // 14: network.v1.ListPeersResponse
	(*DialPeerRequest)(nil),   // 15: network.v1.DialPeerRequest
	(*DialPeerResponse)(nil),  // 16: network.v1.DialPeerResponse
	(*BanPeerRequest)(nil),    // 17: network.v1.BanPeerRequest
	(*BanPeerResponse)(nil),   // 18: network.v1.BanPeerResponse
}
var file_network_v1_network_proto_depIdxs = []int32{
	0,  // 0: network.v1.NetworkEnvelope.gossip:type_name -> network.v1.GossipMessage
	1,  // 1: network.v1.NetworkEnvelope.heartbeat:type_name -> network.v1.Heartbeat
	2,  // 2: network.v1.GossipRequest.envelope:type_name -> network.v1.NetworkEnvelope
	2,  // 3: network.v1.GossipResponse.envelope:type_name -> network.v1.NetworkEnvelope
	6,  // 4: network.v1.NetworkView.counts:type_name -> network.v1.NetworkCounts
	7,  // 5: network.v1.NetworkView.limits:type_name -> network.v1.NetworkLimits
	8,  // 6: network.v1.NetworkView.self:type_name -> network.v1.NetworkSelf
	9,  // 7: network.v1.NetworkView.seeds:type_name -> network.v1.SeedInfo
	10, // 8: network.v1.GetViewResponse.view:type_name -> network.v1.NetworkView
	13, // 9: network.v1.ListPeersResponse.peers:type_name -> network.v1.PeerNetInfo
	3,  // 10: network.v1.NetworkService.Gossip:input_type -> network.v1.GossipRequest
	5,  // 11: network.v1.NetworkService.GetView:input_type -> network.v1.GetViewRequest
	12, // 12: network.v1.NetworkService.ListPeers:input_type -> network.v1.ListPeersRequest
	15, // 13: network.v1.NetworkService.DialPeer:input_type -> network.v1.DialPeerRequest
	17, // 14: network.v1.NetworkService.BanPeer:input_type -> network.v1.BanPeerRequest
	4,  // 15: network.v1.NetworkService.Gossip:output_type -> network.v1.GossipResponse
	11, // 16: network.v1.NetworkService.GetView:output_type -> network.v1.GetViewResponse
	14, // 17: network.v1.NetworkService.ListPeers:output_type -> network.v1.ListPeersResponse
	16, // 18: network.v1.NetworkService.DialPeer:output_type -> network.v1.DialPeerResponse
	18, // 19: network.v1.NetworkService.BanPeer:output_type -> network.v1.BanPeerResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_network_v1_network_proto_init() }
func file_network_v1_network_proto_init() {
	if File_network_v1_network_proto != nil {
		return
	}
	file_network_v1_network_proto_msgTypes[2].OneofWrappers = []any{
		(*NetworkEnvelope_Gossip)(nil),
		(*NetworkEnvelope_Heartbeat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_network_v1_network_proto_rawDesc), len(file_network_v1_network_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_network_v1_network_proto_goTypes,
		DependencyIndexes: file_network_v1_network_proto_depIdxs,
		MessageInfos:      file_network_v1_network_proto_msgTypes,
	}.Build()
	File_network_v1_network_proto = out.File
	file_network_v1_network_proto_goTypes = nil
	file_network_v1_network_proto_depIdxs = nil
}

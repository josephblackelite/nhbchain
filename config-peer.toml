ListenAddress = ":6002"
RPCAddress = ":8081"
DataDir = "./nhb-data-peer"
# Required: point to the genesis file distributed by the network operator.
GenesisFile = "./config/genesis.json"
# Never set this to true on shared networks; it is only for isolated dev clusters.
AllowAutogenesis = false
ValidatorKeystorePath = "./validator-peer.keystore"
ValidatorKMSURI = ""
ValidatorKMSEnv = ""
NetworkName = "nhb-local"

[mempool]
MaxTransactions = 5000
[p2p]
NetworkId = 187001
MaxPeers = 64
MaxInbound = 60
MaxOutbound = 30
MinPeers = 12
OutboundPeers = 16
Bootnodes = []
PersistentPeers = []
Seeds = []
BanScore = 100
GreyScore = 50
RateMsgsPerSec = 50
Burst = 200
HandshakeTimeoutMs = 3000
PingIntervalSeconds = 30
PingTimeoutSeconds = 90
BanDurationSeconds = 3600
DialBackoffSeconds = 30
PEX = true

[network_security]
# Remote validators must configure a shared secret (via env, file, or inline)
# so consensusd can authenticate to p2pd. Populate SharedSecretEnv/SharedSecretFile
# for production deployments; consensusd will refuse to start if this block
# resolves to an empty token.
SharedSecretEnv = "NHB_NETWORK_SHARED_SECRET"
SharedSecretFile = "/etc/nhb/network.token"
SharedSecret = ""
AllowInsecure = false
# Leave the TLS paths commented until certificates are provisioned. The daemon
# now fails fast when TLS material is missing unless AllowInsecure is explicitly
# set to true, so production clusters should enable mutual TLS and keep
# AllowInsecure = false.
# ServerTLSCertFile = "/etc/nhb/tls/p2pd.crt"
# ServerTLSKeyFile = "/etc/nhb/tls/p2pd.key"
# ClientTLSCertFile = "/etc/nhb/tls/consensus.crt"
# ClientTLSKeyFile = "/etc/nhb/tls/consensus.key"

PeerBanSeconds = 3600
ReadTimeout = 90
WriteTimeout = 5
MaxMsgBytes = 1048576
ClientVersion = "nhbchain/node"
